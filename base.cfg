[buildout]
extends = solr.cfg versions.cfg
versions = versions
extensions =
    mr.developer
    buildout_versions
prefer-final = true
auto-checkout = *
parts +=
    test
    python
    scripts
    restrepo_ini
    restrepo_test_ini
    development_ini
    circus-config
    sphinxbuilder
    start_circusd_on_reboot
	circus
    mkdir_circus

develop =
    src/restrepo

# avoid lockup erros with parallel checkouts
mr.developer-threads = 1
socket-timeout = 3
allow-hosts =
    *.python.org
    *.zope.org
    github.com
    docutils.sourceforge.net
    effbot.org
    prdownloads.sourceforge.net
    launchpad.net
# for Genshi (required by recipe.solrinstance)
    *.edgewall.org

eggs =
    buildout-versions
    cornice
    celery
    circus
    circus-web
    deform
    ipdb
    flower
    grequests
    lxml
	requests
	mock
	chaussette
    celery
    nose-sphinx-doc
    nosexcover
    pyramid_exclog
    pyramid_debugtoolbar
    restrepo
    webtest
    watermarker
    z3c.evalexception

[sources]
nose-sphinx-doc = git git://github.com/silviot/NoseSphinxDoc.git rev=bf0e13cc62240825d11001b5aaae68c2fa6dd163
mysolr = git https://github.com/silviot/mysolr.git rev=c9d0a0b642e06936b844897277ccf5d350888a8f
sphynx-bootstrap-theme = git git://github.com/ryan-roemer/sphinx-bootstrap-theme.git rev=8b4397403fe861e22c23d645bbb0c326a2642f6a
watermarker = git git://github.com/sejarah-nusantara/watermarker.git

[ports]
main = 5000
solr = 5002
supervisor = 9001
test_solr = 9110
test_instance = 9111
celery_flower = 5555
circus_httpd = 9112

[test]
recipe = pbp.recipe.noserunner
working-directory = ${buildout:directory}
environment = settings
eggs =
    pbp.recipe.noserunner
    ${buildout:eggs}
defaults =
    --logging-level=CRITICAL
    --with-doctest
    -s
    --with-xunit
    --sphinx-doc
    --webapp-chats
    --sphinx-doc-dir=./docs/source/test

[python]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts = python

[scripts]
recipe = zc.recipe.egg:scripts
eggs =
    PasteScript
    ${buildout:eggs}


[restrepo_ini]
recipe = collective.recipe.template
input = templates/restrepo.in
output = restrepo.ini
publish_in_pagebrowser_url = http://some_url/publish
unpublish_in_pagebrowser_url = http://some_url/unpublish
solr_port = ${ports:solr}
main_port = ${ports:main}
db_url = ${settings:db_url}
# list of IP adresses that are authorized to make changes to the repository
authorized_ips = local 127.0.0.* 85.17.202.182 85.17.202.148 180.250.80.144
watermark_file = ${buildout:directory}/src/restrepo/restrepo/static/watermark.png
watermark_pos_x = 10
watermark_pos_y = 10
watermark_size = 4%
watermark_image_format = jpeg
repository_path = ${buildout:directory}/files
pyramid_includes = pyramid_exclog
# url_scheme is either http or https
url_scheme = https

[restrepo_test_ini]
<= restrepo_ini
output = restrepo_test.ini
solr_port = ${ports:test_solr}
main_port = ${ports:test_instance}
db_url = ${settings:TEST_DB_URL}
authorized_ips = local
repository_path = ${buildout:directory}/tmp/files
url_scheme = https

[development_ini]
<= restrepo_ini
input = templates/development.in
output = development.ini
authorized_ips = local
repository_path = ${buildout:directory}/files

[circus-config]
recipe = collective.recipe.template
input = templates/circus.in
output = ${buildout:directory}/circus.ini
autostart_test_solr = false
autostart_test_repository = false


[settings]
db_url = postgresql+psycopg2:///dasa_repository
TEST_DB_URL = postgresql+psycopg2:///restrepo_test
TEST_INSTANCE_PORT = ${ports:test_instance}
authorized_ips = local
url_scheme = https

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs/source
build = ${buildout:directory}/docs/build
interpreter = ${buildout:directory}/bin/python
extra-paths =
    ${buildout:directory}/src/sphynx-bootstrap-theme

[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
scripts = pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main
initialization = if not sys.argv[1:]: sys.argv[1:] = ["restrepo"]

[start_supervisord_on_reboot]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/supervisord

[rabbitmq]
recipe = rod.recipe.rabbitmq
url = http://www.rabbitmq.com/releases/rabbitmq-server/v3.2.3/rabbitmq-server-generic-unix-3.2.3.tar.gz


[start_circusd_on_reboot]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon ${buildout:directory}/circus.ini


[mkdir_circus]
recipe = z3c.recipe.mkdir
paths = var/circus

[mkdir_log]
recipe = z3c.recipe.mkdir
paths = /var/log/dasa

[circus]
recipe = zc.recipe.egg
initialization =
	import os
	import sys
	os.environ['CIRCUSCTL_ENDPOINT'] ='ipc:///${buildout:directory}/var/circus/endpoint'
	if len(sys.argv) == 1  and os.path.basename(sys.argv[0]) in ['circusd']: sys.argv += ['${buildout:directory}/circus.ini']
#	if len(sys.argv) == 1  and os.path.basename(sys.argv[0]) in ['circusctl', 'circusd']: sys.argv += ['--endpoint=${buildout:directory}/var/circus/endpoint']

eggs = ${buildout:eggs}
